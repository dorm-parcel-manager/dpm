// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package cmd

import (
	sd "github.com/dorm-parcel-manager/dpm/common/service-discovery"
	"github.com/dorm-parcel-manager/dpm/common/db"
	"github.com/dorm-parcel-manager/dpm/common/pb"
	"github.com/dorm-parcel-manager/dpm/common/server"
	"github.com/dorm-parcel-manager/dpm/services/user/config"
	"github.com/dorm-parcel-manager/dpm/services/user/service"
	"google.golang.org/grpc"
)

// Injectors from wire.go:

func InitializeServer() (*server.Server, func(), error) {
	configConfig := config.ProvideConfig()
	serverConfig := configConfig.Server
	dbConfig := configConfig.DB
	sdClint := sd.GetServiceDiscoveryClient()
	gormDB, err := db.NewDb(dbConfig)
	if err != nil {
		return nil, nil, err
	}
	userServiceServer, err := service.NewUserServiceServer(gormDB, sdClint)
	if err != nil {
		return nil, nil, err
	}
	grpcServer := ProvideGrpcServer(userServiceServer)
	serverServer := server.NewServer(serverConfig, grpcServer)
	return serverServer, func() {
	}, nil
}

// wire.go:

func ProvideGrpcServer(userService pb.UserServiceServer) *grpc.Server {
	s := grpc.NewServer()
	pb.RegisterUserServiceServer(s, userService)
	return s
}
