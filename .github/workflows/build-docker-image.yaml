name: Build Docker Image

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Service'
        required: true
        type: choice
        options:
          - user

env:
  CACHE_REPO: ghcr.io/${{ github.repository }}
  IMAGE_REPO: ghcr.io/${{ github.repository }}/${{ github.event.inputs.service }}

jobs:
  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker login using Github Token
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.IMAGE_REPO }}

      - name: Build and push to GitHub Packages
        id: buil
        uses: docker/build-push-action@v3.1.1
        with:
          context: .
          platforms: linux/arm64
          tags: ${{ env.IMAGE_REPO }}
          build-args: SERVICE=user
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true

      - name: Prepare image list
        id: images
        run: |
          NEWIMAGE=${{ env.IMAGE_REPO }}@${{ steps.build.outputs.digest }}
          IMAGES="[{\"environment\":\"prod\",\"target\": \"backend\",\"newImage\":\"$NEWIMAGE\"}]"
          echo "::set-output name=images::$(echo $IMAGES | base64 -w 0)"
